name: microservices-containers

services:
  postgres:
    image: postgres
    container_name: microservices-identity-database
    volumes:
      - C:\Users\SESA670640\Desktop\postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
    networks:
      - my-network

  keycloak:
    image: quay.io/keycloak/keycloak
    container_name: microservices-keycloak-identity
    volumes:
      - C:\Users\SESA670640\Desktop\realm-import:/opt/keycloak/data/import
      - ./Https-Certificates/localhost.crt:/opt/keycloak/conf/server.crt
      - ./Https-Certificates/localhost.key:/opt/keycloak/conf/server.key
    command: start-dev --import-realm
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: postgres
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_SCHEMA: public
      DB_PASSWORD: password
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: AAAAAAAA
      KC_HTTPS_CERTIFICATE_FILE: /opt/keycloak/conf/server.crt
      KC_HTTPS_CERTIFICATE_KEY_FILE: /opt/keycloak/conf/server.key
      KC_HTTP_RELATIVE_PATH: "/auth"
      KC_FEATURES: "preview,token-exchange"
    ports:
      - 8443:8443
    networks:
      - my-network
    depends_on:
      - postgres  

  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    hostname: microservices-sqlserver
    container_name: microservices-sqlserver
    environment:
      ACCEPT_EULA: "Y"
      MSSQL_SA_PASSWORD: "Admin#123"
    ports:
      - "1433:1433"
    volumes:
      - C:\Users\SESA670640\Desktop\microservice_data\data:/var/opt/mssql/data
      - C:\Users\SESA670640\Desktop\microservice_data\log:/var/opt/mssql/log
      - C:\Users\SESA670640\Desktop\microservice_data\secrets:/var/opt/mssql/secrets
    networks:
      - my-network 

  mssql-tools:
    image: mcr.microsoft.com/mssql-tools:latest
    restart: no
    command: "/opt/mssql-tools/bin/sqlcmd -S microservices-sqlserver -l 60 -U sa -P 'Admin#123' -d master -i /tmp/mssql-init.sql"
    depends_on:
      - sqlserver
    volumes:
      - C:\Users\SESA670640\Desktop\microservice_data\mssql-init.sql:/tmp/mssql-init.sql
    networks:
      - my-network 
       
  microservice1:
    image: ${DOCKER_REGISTRY-}microservice1:latest
    container_name: microservice1
    restart: on-failure
    build:
      context: .
      dockerfile: microservice1/Dockerfile
    environment:
      - ASPNETCORE_URLS=http://*:8080/;https://*:8081/
      - ASPNETCORE_HTTPS_PORTS=8081
      - ASPNETCORE_Kestrel__Certificates__Default__Password=Aditya#123
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
      - AuthenticationParameters__Authority=https://192.168.31.242:8443/auth/realms/MicroserviceIdentity
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
      - $USERPROFILE\.aspnet\https:/https/

    depends_on:
        - sqlserver
        - keycloak
    networks:
      - my-network

  microservice2:
    image: ${DOCKER_REGISTRY-}microservice2:latest
    container_name: microservice2
    restart: on-failure
    build:
      context: .
      dockerfile: microservice2/Dockerfile
    environment:
      - ASPNETCORE_URLS=http://*:8080/;https://*:8081/
      - ASPNETCORE_HTTPS_PORTS=8081
      - ASPNETCORE_Kestrel__Certificates__Default__Password=Aditya#123
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
      - AuthenticationParameters__Authority=https://192.168.31.242:8443/auth/realms/MicroserviceIdentity
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
      - $USERPROFILE\.aspnet\https:/https/

    depends_on:
        - sqlserver
        - keycloak
    networks:
      - my-network

  microservice3:
    image: ${DOCKER_REGISTRY-}microservice3:latest
    container_name: microservice3
    restart: on-failure
    build:
      context: .
      dockerfile: microservice3/Dockerfile
    environment:
      - ASPNETCORE_URLS=http://*:8080/;https://*:8081/
      - ASPNETCORE_HTTPS_PORTS=8081
      - ASPNETCORE_Kestrel__Certificates__Default__Password=Aditya#123
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
      - AuthenticationParameters__Authority=https://192.168.31.242:8443/auth/realms/MicroserviceIdentity
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
      - $USERPROFILE\.aspnet\https:/https/

    depends_on:
        - sqlserver
        - keycloak
        - microservice1
    networks:
      - my-network

  gateway.api:
    image: ${DOCKER_REGISTRY-}gatewayapi:latest
    container_name: gatewayApi
    restart: on-failure
    build:
      context: .
      dockerfile: Gateway.api/Dockerfile
    environment:
      - ASPNETCORE_URLS=http://*:8080/;https://*:8081/
      - ASPNETCORE_HTTPS_PORTS=8081
      - ASPNETCORE_Kestrel__Certificates__Default__Password=Aditya#123
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
      - AuthenticationParameters__Authority=https://192.168.31.242:8443/auth/realms/MicroserviceIdentity
      - AuthenticationParameters__TokenEndpoint=https://192.168.31.242:8443/auth/realms/MicroserviceIdentity/protocol/openid-connect/token
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
      - $USERPROFILE\.aspnet\https:/https/
    ports:
      - "7274:8081"
    depends_on:
        - microservice1
        - sqlserver
        - keycloak
    networks:
      - my-network
     
networks:
  "my-network":
    driver: bridge
  
